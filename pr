[TestMethod]
public void Dispose_TimerServiceThrowsException_LogsErrorAndThrows()
{
    // Arrange
    _timerServiceMock.Setup(t => t.Dispose()).Throws(new InvalidOperationException());

    try
    {
        // Act
        _worker.Dispose();
    }
    catch (InvalidOperationException ex)
    {
        // Assert - Ensure the logger logs the error
        _loggerMock.Verify(
            logger => logger.Log(
                LogLevel.Error,
                It.IsAny<EventId>(),
                It.Is<It.IsAnyType>((v, t) => v.ToString().Contains("An error occurred while disposing the timer service.")),
                ex, // Verify that the correct exception was logged
                It.IsAny<Func<It.IsAnyType, Exception, string>>()), 
            Times.Once);

        // Re-throw the exception to ensure the test fails as expected
        throw;
    }
}
