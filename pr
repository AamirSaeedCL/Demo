SET NOCOUNT ON;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

-- Declare constants
DECLARE @CDC_OP_INSERT INT = 2;
DECLARE @CDC_OP_UPDATE_AFTER INT = 4;

-- Set LastRunDateTime from pipeline (replace this with pipeline expression if needed)
DECLARE @LastRunDateTime DATETIME2 = TRY_CAST('@{activity('Lookup the pipeline log table to fetch lastrundatetime').output.value[0].LastRunDateTime}' AS DATETIME2);

-- Validate LastRunDateTime
IF @LastRunDateTime IS NULL
BEGIN
    THROW 50001, 'Invalid LastRunDateTime Value', 1;
END

-- CTE to gather and filter latest consumer account tags
WITH LatestAccountTags AS (
    SELECT
        CAT.cnsmr_accnt_tag_id AS AccountTagId,
        CAT.cnsmr_accnt_id AS AccountId,
        T.tag_id AS TagId,
        T.tag_nm AS TagName,
        T.tag_shrt_nm AS TagShortName,
        CAT2.cnsmr_accnt_tag_assgn_dt AS TagAssignmentDate,
        CAST(1 AS BIT) AS TagActive,
        CAT.upsrt_dttm AS UpsertDateTime,
        ROW_NUMBER() OVER (
            PARTITION BY CAT.cnsmr_accnt_id
            ORDER BY CAT.upsrt_dttm DESC
        ) AS rn
    FROM [cdc].[dbo_cnsmr_accnt_Tag_CT] AS CAT WITH (NOLOCK)
    LEFT JOIN [dbo].[cnsmr_accnt_tag] AS CAT2 WITH (NOLOCK)
        ON CAT.cnsmr_accnt_tag_id = CAT2.cnsmr_accnt_tag_id
    INNER JOIN [dbo].[tag] AS T WITH (NOLOCK)
        ON CAT.tag_id = T.tag_id
    WHERE 
        CAT.upsrt_dttm > @LastRunDateTime
        AND CAT.cnsmr_accnt_sft_delete_flg = 'N'
        AND CAT.__$operation IN (@CDC_OP_INSERT, @CDC_OP_UPDATE_AFTER)
)

-- Select only latest tag per account
SELECT 
    AccountTagId,
    AccountId,
    TagId,
    TagName,
    TagShortName,
    TagAssignmentDate,
    TagActive,
    UpsertDateTime
FROM LatestAccountTags
WHERE rn = 1;

-- Reset isolation level
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
