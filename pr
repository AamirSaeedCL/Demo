SET NOCOUNT ON;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

-- CDC operation constants
DECLARE @CDC_OP_INSERT INT = 2;
DECLARE @CDC_OP_UPDATE_AFTER INT = 4;
DECLARE @LastRunDateTime DATETIME2 = '2025-01-01';  -- Replace with dynamic expression as needed

IF @LastRunDateTime IS NULL
BEGIN
    THROW 50001, 'Invalid LastRunDateTime Value', 1;
END

-- CTE: Get Workgroup Data
WITH CTE_Workgroup AS (
    SELECT 
        wrkgrp_id,
        wrkgrp_nm,
        wrkgrp_shrt_nm
    FROM 
        [dbo].[wrkgrp] WITH (NOLOCK)
),

-- CTE: Latest Consumer Records from CDC
CTE_Consumer AS (
    SELECT 
        c.cnsmr_id,
        c.wrkgrp_id,
        c.cnsmr_lst_wrkgrp_id,
        c.upsrt_dttm,
        ROW_NUMBER() OVER (
            PARTITION BY c.cnsmr_id 
            ORDER BY c.__$start_lsn DESC, c.__$seqval DESC
        ) AS RowNumber
    FROM 
        [cdc].[dbo_cnsmr_CT] c WITH (NOLOCK)
    WHERE 
        c.upsrt_dttm > @LastRunDateTime
        AND c.__$operation IN (@CDC_OP_INSERT, @CDC_OP_UPDATE_AFTER)
)

-- Final Output
SELECT 
    c.cnsmr_id AS CustomerId,
    CAST(NULL AS uniqueidentifier) AS CustomerGroupId,
    w.wrkgrp_id AS WorkGroupId,
    w.wrkgrp_nm AS WorkgroupName,
    w.wrkgrp_shrt_nm AS WorkgroupShortName,
    c.cnsmr_lst_wrkgrp_id AS LastWorkGroupId,
    lw.wrkgrp_nm AS LastWorkgroupName,
    lw.wrkgrp_shrt_nm AS LastWorkgroupShortName,
    c.upsrt_dttm AS UpsertDateTime
FROM 
    CTE_Consumer c
    INNER JOIN CTE_Workgroup w ON c.wrkgrp_id = w.wrkgrp_id
    LEFT JOIN [dbo].[wrkgrp] lw WITH (NOLOCK) ON c.cnsmr_lst_wrkgrp_id = lw.wrkgrp_id
WHERE 
    c.RowNumber = 1
ORDER BY 
    c.upsrt_dttm, c.cnsmr_id
OPTION (RECOMPILE);

-- Restore transaction level
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
