

SET NOCOUNT ON;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

-- CDC operation constants
DECLARE 
    @CDC_OP_INSERT INT = 2,
    @CDC_OP_UPDATE_AFTER INT = 4;
DECLARE @LastRunDateTime DATETIME2 = '2025-01-01' --TRY_CAST('@{activity('Lookup the pipeline log table to fetch lastrundatetime').output.value[0].LastRunDateTime}' AS DATETIME2);

IF @LastRunDateTime IS NULL
BEGIN
    THROW 50001, 'Invalid LastRunDateTime Value', 1;
END


CREATE TABLE #TempCreditorAccount
(
    AccountId INT,
    CustomerId INT,
    CustomerGroupId UNIQUEIDENTIFIER,
    CreditorID INT,
    CreditorName NVARCHAR(255),
    CreditorShortName NVARCHAR(50),
    AccountDescription NVARCHAR(MAX),
    UpsertDateTime DATETIME2,
    INDEX CIX_TempCreditorAccount CLUSTERED (CreditorID, AccountId)
);

WITH RankedAccounts AS (
    SELECT
        CA.cnsmr_accnt_id AS AccountId,
        CA.cnsmr_id AS CustomerId,
        CAST(NULL AS UNIQUEIDENTIFIER) AS CustomerGroupId,
        C.crdtr_id AS CreditorID,
        C.crdtr_nm AS CreditorName,
        C.crdtr_shrt_nm AS CreditorShortName,
        C.crdtr_dscrptn_txt AS AccountDescription,
        CA.upsrt_dttm AS UpsertDateTime,
        ROW_NUMBER() OVER (
            PARTITION BY CA.cnsmr_accnt_id
            ORDER BY CA.upsrt_dttm DESC
        ) AS rn
    FROM 
        [dbo].[crdtr] AS C WITH (NOLOCK)
        INNER JOIN [cdc].[dbo_cnsmr_accnt_CT] CA WITH (NOLOCK) 
            ON CA.crdtr_id = C.crdtr_id
    WHERE 
        CA.upsrt_dttm > @LastRunDateTime
	AND 
		CA.__$operation IN (@CDC_OP_INSERT, @CDC_OP_UPDATE_AFTER)
)


INSERT INTO #TempCreditorAccount (AccountId, CustomerId, CustomerGroupId, CreditorID, CreditorName, CreditorShortName, AccountDescription, UpsertDateTime)
SELECT 
    AccountId,
    CustomerId,
    CustomerGroupId,
    CreditorID,
    CreditorName,
    CreditorShortName,
    AccountDescription,
    UpsertDateTime
FROM RankedAccounts
WHERE rn = 1;


CREATE NONCLUSTERED INDEX IX_TempCreditorAccount_UpsertDateTime ON #TempCreditorAccount (UpsertDateTime);


SELECT 
    AccountId,
    CustomerId,
    CustomerGroupId,
    CreditorID,
    CreditorName,
    CreditorShortName,
    AccountDescription,
    UpsertDateTime
FROM 
    #TempCreditorAccount
OPTION (RECOMPILE);


DROP TABLE #TempCreditorAccount;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
