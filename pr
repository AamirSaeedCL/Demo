 [TestMethod]
        [ExpectedException(typeof(SqlException))]
        public void ExecuteQueries_SqlExceptionThrown()
        {
            // Arrange
            var mockConnection = new Mock<IDbConnection>();
            mockConnection.Setup(c => c.Open()).Throws(new SqlException());

            SqlConnectionFactory.SetConnection(mockConnection.Object);

            // Act
            _databaseService.ExecuteQueries();

            // Assert
            _mockLogger.Verify(l => l.LogError(It.IsAny<Exception>(), "A database error occurred while trying to connect."), Times.Once);
        }

        [TestMethod]
        [ExpectedException(typeof(Exception))]
        public void ExecuteQueries_GeneralExceptionThrown()
        {
            // Arrange
            var mockConnection = new Mock<IDbConnection>();
            mockConnection.Setup(c => c.Query<dynamic>(It.IsAny<string>())).Throws(new Exception("Test Exception"));

            SqlConnectionFactory.SetConnection(mockConnection.Object);

            // Act
            _databaseService.ExecuteQueries();

            // Assert
            _mockLogger.Verify(l => l.LogError(It.IsAny<Exception>(), "An unexpected error occurred."), Times.Once);
        }
