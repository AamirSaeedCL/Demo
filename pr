DECLARE @TableName NVARCHAR(128) = 'YourTableName';  -- Replace with your table name
DECLARE @SQL NVARCHAR(MAX) = '';
DECLARE @Columns NVARCHAR(MAX);

-- Get column list
SELECT @Columns = STUFF((
    SELECT ', ' + QUOTENAME(name)
    FROM sys.columns
    WHERE object_id = OBJECT_ID(@TableName)
    ORDER BY column_id
    FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '');

-- Generate the INSERT statements
SELECT @SQL = @SQL + 'INSERT INTO ' + QUOTENAME(@TableName) + ' (' + @Columns + ') VALUES (' + CHAR(10) +
    STUFF((
        SELECT ', ' +
            CASE 
                WHEN col.system_type_id IN (167, 175, 231, 239) THEN  -- char/varchar/nchar/nvarchar
                    '''' + REPLACE(REPLACE(ISNULL(CONVERT(NVARCHAR(MAX), t.[col]), ''), '''', ''''''), CHAR(13) + CHAR(10), '') + ''''
                WHEN col.system_type_id IN (61, 40, 42, 43) THEN      -- datetime types
                    '''' + ISNULL(CONVERT(NVARCHAR, t.[col], 120), 'NULL') + ''''
                WHEN t.[col] IS NULL THEN 'NULL'
                ELSE CONVERT(NVARCHAR(MAX), t.[col])
            END
        FROM sys.columns col
        CROSS APPLY (SELECT col.name AS col) AS c
        WHERE col.object_id = OBJECT_ID(@TableName)
        ORDER BY col.column_id
        FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 2, '') + ');' + CHAR(10)
FROM (
    SELECT *
    FROM [YourTableName]  -- Use real table name here again
) AS t;

-- Print the generated script (use SELECT if result too long for PRINT)
SELECT @SQL;
