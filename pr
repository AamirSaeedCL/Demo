
CREATE PROCEDURE [dbo].[usp_Customer_UpdateCustomerGroupId]
    @LastUpsertDateTime DATETIME
AS
BEGIN
    SET NOCOUNT ON;

	IF OBJECT_ID('tempdb..#tempPega_UpdateCustomerGroupId') IS NOT NULL
		DROP TABLE #tempPega_UpdateCustomerGroupId

	CREATE TABLE #tempPega_UpdateCustomerGroupId (
		[CustomerId]		BIGINT NOT NULL
	,	[CustomerGroupId]	UNIQUEIDENTIFIER NULL
	,	CONSTRAINT [PK_tempPega_UpdateCustomerGroupId] PRIMARY KEY (
			[CustomerId]
		)
	)
	INSERT INTO [#tempPega_UpdateCustomerGroupId] ( [CustomerId], [CustomerGroupId] )
	SELECT [C].[CustomerId], [C].[CustomerGroupId]
	FROM dbo.Customer AS [C]
    WHERE [C].[UpsertDateTime] >= @LastUpsertDateTime;

    BEGIN TRANSACTION;

    -- Update customer group IDs where upsertDate is on or after the specified date
    UPDATE [C] WITH (TABLOCKX, UPDLOCK, HOLDLOCK)
    SET [C].[customergroupid] = [ST].[groupId]
    FROM [dbo].[Customer] AS [C]
    INNER JOIN (
		SELECT
			[TPUCGI].[CustomerId]
		,	[CG].[groupId]
		FROM [#tempPega_UpdateCustomerGroupId] AS [TPUCGI]
		INNER JOIN [dbo].[ConsumerGroup] AS [CG]
			ON [TPUCGI].[CustomerId] = [CG].[ConsumerID]
		WHERE [TPUCGI].[CustomerGroupId] IS NULL OR 
			[TPUCGI].[CustomerGroupId] <> [CG].[groupId]
	) AS [ST]
		ON [C].[CustomerId] = [ST].[CustomerId]
    
    COMMIT TRANSACTION;

	DROP TABLE #tempPega_UpdateCustomerGroupId
END;
