CREATE OR ALTER PROCEDURE [dbo].[usp_ManageConstraintsAndIndexes]
    @SchemaName SYSNAME,
    @TableName SYSNAME,
    @Constraints ConstraintListTableType READONLY,
    @Status VARCHAR(10) -- 'Drop' or 'Add'
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE 
        @SQL NVARCHAR(MAX),
        @ConstraintName SYSNAME,
        @ConstraintType VARCHAR(20),
        @ColumnName SYSNAME,
        @DefaultValue NVARCHAR(MAX),
        @RowNum INT = 0,
        @TotalRows INT = (SELECT COUNT(*) FROM @Constraints);

    WHILE @RowNum < @TotalRows
    BEGIN
        SELECT 
            @ConstraintName = ConstraintName,
            @ConstraintType = ConstraintType,
            @ColumnName = ColumnName,
            @DefaultValue = DefaultValue
        FROM @Constraints
        ORDER BY (SELECT NULL)
        OFFSET @RowNum ROWS FETCH NEXT 1 ROW ONLY;

        IF @Status = 'Drop'
        BEGIN
            IF @ConstraintType = 'PK'
            BEGIN
                IF EXISTS (
                    SELECT 1
                    FROM sys.key_constraints kc
                    JOIN sys.tables t ON kc.parent_object_id = t.object_id
                    JOIN sys.schemas s ON t.schema_id = s.schema_id
                    WHERE kc.name = @ConstraintName
                      AND t.name = @TableName
                      AND s.name = @SchemaName
                )
                BEGIN
                    SET @SQL = N'ALTER TABLE [' + @SchemaName + '].[' + @TableName + '] DROP CONSTRAINT [' + @ConstraintName + ']';
                    EXEC sp_executesql @SQL;
                END
            END
            ELSE IF @ConstraintType = 'DF'
            BEGIN
                IF EXISTS (
                    SELECT 1
                    FROM sys.default_constraints dc
                    JOIN sys.columns c ON dc.parent_object_id = c.object_id AND dc.parent_column_id = c.column_id
                    JOIN sys.tables t ON c.object_id = t.object_id
                    JOIN sys.schemas s ON t.schema_id = s.schema_id
                    WHERE dc.name = @ConstraintName
                      AND t.name = @TableName
                      AND s.name = @SchemaName
                )
                BEGIN
                    SET @SQL = N'ALTER TABLE [' + @SchemaName + '].[' + @TableName + '] DROP CONSTRAINT [' + @ConstraintName + ']';
                    EXEC sp_executesql @SQL;
                END
            END
        END
        ELSE IF @Status = 'Add'
        BEGIN
            IF @ConstraintType = 'DF' AND @ColumnName IS NOT NULL AND @DefaultValue IS NOT NULL
            BEGIN
                IF NOT EXISTS (
                    SELECT 1
                    FROM sys.default_constraints dc
                    JOIN sys.columns c ON dc.parent_object_id = c.object_id AND dc.parent_column_id = c.column_id
                    JOIN sys.tables t ON c.object_id = t.object_id
                    JOIN sys.schemas s ON t.schema_id = s.schema_id
                    WHERE dc.name = @ConstraintName
                      AND t.name = @TableName
                      AND s.name = @SchemaName
                )
                BEGIN
                    SET @SQL = N'ALTER TABLE [' + @SchemaName + '].[' + @TableName + '] ADD CONSTRAINT [' + @ConstraintName + '] DEFAULT ' + @DefaultValue + ' FOR [' + @ColumnName + ']';
                    EXEC sp_executesql @SQL;
                END
            END
            ELSE IF @ConstraintType = 'PK' AND @ColumnName IS NOT NULL
            BEGIN
                IF NOT EXISTS (
                    SELECT 1
                    FROM sys.key_constraints kc
                    JOIN sys.tables t ON kc.parent_object_id = t.object_id
                    JOIN sys.schemas s ON t.schema_id = s.schema_id
                    WHERE kc.name = @ConstraintName
                      AND t.name = @TableName
                      AND s.name = @SchemaName
                )
                BEGIN
                    SET @SQL = N'ALTER TABLE [' + @SchemaName + '].[' + @TableName + '] ADD CONSTRAINT [' + @ConstraintName + '] PRIMARY KEY ([' + @ColumnName + '])';
                    EXEC sp_executesql @SQL;
                END
            END
        END

        SET @RowNum += 1;
    END

    -- Manage indexes
    DECLARE @IndexSQL NVARCHAR(MAX) = '';

    IF @Status = 'Drop'
    BEGIN
        SELECT @IndexSQL = STRING_AGG(
            'ALTER INDEX [' + i.name + '] ON [' + @SchemaName + '].[' + @TableName + '] DISABLE', '; ')
        FROM sys.indexes i
        JOIN sys.tables t ON i.object_id = t.object_id
        JOIN sys.schemas s ON t.schema_id = s.schema_id
        WHERE t.name = @TableName
          AND s.name = @SchemaName
          AND i.type_desc <> 'HEAP'
          AND i.is_primary_key = 0
          AND i.name IS NOT NULL;
    END
    ELSE IF @Status = 'Add'
    BEGIN
        SET @IndexSQL = 'ALTER INDEX ALL ON [' + @SchemaName + '].[' + @TableName + '] REBUILD;';
    END

    IF LEN(@IndexSQL) > 0
        EXEC sp_executesql @IndexSQL;
END
