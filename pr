using Engage.DataSelection.Service.POC.Interfaces;

namespace Engage.DataSelection.Service.POC.Services
{
    public class TimerService : ITimerService
    {
        private readonly ILogger<TimerService> _logger;
        private Timer? _timer;

        public TimerService(ILogger<TimerService> logger)
        {
            _logger = logger ?? throw new ArgumentNullException(nameof(logger));
        }

        public void Start(Action callback, TimeSpan dueTime, TimeSpan period)
        {
            try
            {
                _timer = new Timer(_ => callback(), null, dueTime, period);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while starting the timer.");
                throw;
            }
        }

        public void Stop()
        {
            try
            {
                _timer?.Change(Timeout.Infinite, 0);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while stopping the timer.");
                throw;
            }
        }

        public void Dispose()
        {
            try
            {
                _timer?.Dispose();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "An error occurred while disposing the timer.");
                throw;
            }
        }
    }

}
